<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.aride</groupId>
    <artifactId>rpm-packaging-example</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>rpm-packaging-example</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <rpm.install.directory>/opt/aride/${project.artifactId}</rpm.install.directory>
        <unix.user.name>myuser</unix.user.name>
    </properties>

    <dependencies>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.aride.App</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>./config/</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-script-folder</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/scripts</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/scripts</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-config-folder</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-rpm</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attached-rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <license>non-commercial software</license>
                    <distribution>${project.groupId}</distribution>
                    <group>${project.groupId}</group>
                    <mappings>
                        <mapping>
                            <directory>${rpm.install.directory}</directory>
                            <filemode>640</filemode>
                            <username>${unix.user.name}</username>
                            <groupname>${unix.user.name}</groupname>
                            <artifact></artifact>
                        </mapping>

                        <mapping>
                            <directory>${rpm.install.directory}/lib</directory>
                            <filemode>740</filemode>
                            <username>${unix.user.name}</username>
                            <groupname>${unix.user.name}</groupname>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/lib</location>
                                </source>
                            </sources>
                        </mapping>

                        <mapping>
                            <directory>/etc/init.d/</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/scripts/rpm-packaging-example</location>
                                </source>
                            </sources>
                        </mapping>

                        <mapping>
                            <directory>${rpm.install.directory}/log</directory>
                            <filemode>740</filemode>
                            <username>${unix.user.name}</username>
                            <groupname>${unix.user.name}</groupname>
                        </mapping>

                        <mapping>
                            <directory>${rpm.install.directory}/config</directory>
                            <configuration>true</configuration>
                            <filemode>740</filemode>
                            <username>${unix.user.name}</username>
                            <groupname>${unix.user.name}</groupname>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/config</location>
                                </source>
                            </sources>
                        </mapping>

                    </mappings>
                    <preinstallScriptlet>
                        <scriptFile>${project.build.directory}/scripts/preinstall.sh</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <!-- <script></script>-->
                        <fileEncoding>utf-8</fileEncoding>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <!-- <script></script> -->
                    </preremoveScriptlet>
                    <postremoveScriptlet>
                       <!-- <script></script> -->
                    </postremoveScriptlet>
                    <requires>
                       <!-- <require>jre1.8.0_40</require> -->
                    </requires>

                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
